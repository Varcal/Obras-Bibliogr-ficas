// <auto-generated />
using GuideInvestimentos.Infra_Dados.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GuideInvestimentos.Infra_Dados.Migrations
{
    [DbContext(typeof(GuideDbContext))]
    partial class GuideDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GuideInvestimentos.Dominio.Entidades.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("GuideInvestimentos.Dominio.Entidades.Autor", b =>
                {
                    b.OwnsOne("GuideInvestimentos.Dominio.ObjetosDeValor.Nome", "Nome", b1 =>
                        {
                            b1.Property<int>("AutorId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Texto")
                                .IsRequired()
                                .HasColumnName("Nome")
                                .HasColumnType("varchar(200)");

                            b1.HasKey("AutorId");

                            b1.ToTable("Autor");

                            b1.HasOne("GuideInvestimentos.Dominio.Entidades.Autor")
                                .WithOne("Nome")
                                .HasForeignKey("GuideInvestimentos.Dominio.ObjetosDeValor.Nome", "AutorId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
